/*! @file
 *  This file contains an ISA-portable PIN tool for generating a PC histogram
 *  Copyright (c) 2016, The Regents of the University of California (Regents).
 *  All Rights Reserved. See LICENSE for license details.
 */

#include "pin.H"
#include <iostream>
#include <fstream>

#include <vector>
#include <map>

/* ===================================================================== */
/* Global Variables */
/* ===================================================================== */

std::ofstream TraceFile;
  
std::map<size_t,size_t> pc_histogram;

/* ===================================================================== */
/* Commandline Switches */
/* ===================================================================== */

KNOB<string> KnobOutputFile(KNOB_MODE_WRITEONCE, "pintool",
    "o", "trace.out", "specify trace file name");

/* ===================================================================== */
/* Print Help Message                                                    */
/* ===================================================================== */

INT32 Usage()
{
    cerr <<
        "This tool produces a histogram of the PCs of all committed instructions\n"
        "\n";

    cerr << KNOB_BASE::StringKnobSummary();

    cerr << endl;

    return -1;
}
 
/* ===================================================================== */

VOID countip(void *ip)
{
   INT64 pc = (INT64) ip;
   pc_histogram[pc]++;
}

/* ===================================================================== */

VOID Instruction(INS ins, VOID *v)
{
    INS_InsertCall(ins, IPOINT_BEFORE, (AFUNPTR) countip, IARG_INST_PTR, IARG_END);
}
 
/* ===================================================================== */

VOID Fini(INT32 code, VOID *v)
{
    TraceFile << "PC Histogram size:" << pc_histogram.size() << endl;
    for(auto iterator = pc_histogram.begin(); iterator != pc_histogram.end(); ++iterator) {
      TraceFile << hex << iterator->first << " " << dec << iterator->second << endl;
    }

    TraceFile << "# eof of Pin Trace File" << endl;
    
    TraceFile.close();
}

/* ===================================================================== */
/* Main                                                                  */
/* ===================================================================== */

int  main(int argc, char *argv[])
{
    string trace_header = string("#\n"
                                 "# Instruction PC Histogram Generated By Pin\n"
                                 "#\n");
    
    if( PIN_Init(argc,argv) )
    {
        return Usage();
    }
    

    TraceFile.open(KnobOutputFile.Value().c_str());
    //TraceFile.write(trace_header.c_str(),trace_header.size());
    
        
    INS_AddInstrumentFunction(Instruction, 0);
    PIN_AddFiniFunction(Fini, 0);

    // Never returns

    PIN_StartProgram();
    
    return 0;
}

/* ===================================================================== */
/* eof */
/* ===================================================================== */
